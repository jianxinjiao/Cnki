新建文件名与git项目名一样：
	git init
配置：
	git config --global user.name "name"
	git config --global user.email email@baidu.com
添加git地址：
	git remote add origin https://******.git
复制个文件到文件夹：
	。。。。
提交文件夹的同时创建master分支：
	git add *
	git commit -m 'first'
	git push -u origin master
查看分支：
	git branch
创建分支：
	git branch name  -->name为分支的名字可调节
切换分支：
	git checkout name

提交代码：
	git status
	git add *
	git status
	git commit -m '注释'
	git push -u origin dev

合并到master：
	1、先切换分支到master：
		checkout master
	2、如果是多人开发的话 需要把远程master上的代码pull下来: 
		git pull origin master
	3、如果是自己一个开发就没有必要了，为了保险期间还是pull，然后我们把dev分支的代码合并到master上：
		git merge dev

-----------------------------------------------------------------------------------

（只做一次）
git config --global user.name "name"
git config --global user.email email@baidu.com

git push -u origin dev  

例如：将stralib上的2.0分支拉取到本地

git init
1》与远程仓库建立连接：git remote add origin XXXXX.git


2》使用git branch 查看本地是否具有main分支


3》如果没有?git fetch origin 2.0
4》git checkout -b 2.0 origin/2.0 在本地创建分支2.0并切换到该分支


5》git pull origin 2.0就可以把gitLab上2.0分支上的内容都拉取到本地了


例如：将strawman上的truck分支拉取到本地

1》与远程仓库建立连接：git remote add origin XXXXX.git


2》使用git branch 查看本地是否具有truck分支


3》如果没有?git fetch origin trunk
4》git checkout -b trunk origin/trunk 在本地创建分支dev并切换到该分支


5》git pull origin trunk就可以把gitLab上trunk分支上的内容都拉取到本地了


（第一次时用）
1. 查看项目远程仓库的配置。对于Fork出来的项目，如项目B，只显示项目B.git，没有它的源项目A的地址信息。
git remote -v
  1. 添加源项目A的地址
git remote add upstream SourceProjectAURL
  1. 确认是否添加成功
git remote -v


（每次修改之前执行）
      获取stralib 2.0 的更新 git pull upstream 2.0

  1. 获取项目A的更新
git fetch upstream
  1. 合并项目A的同步。2.0可指定为项目A某一分支，如feature_A
git merge upstream/2.0 （stralib）
（修改后）
1. git commit
为何不升级到GitLab 8？国内的网络环境略差，直接升级容易失败，数据库备份也较为麻烦，所以此事就搁置了。
2.git push

（推送代码）：：：：
$ git status			// 查看状态

$ git add *		                // 修改或添加所有

$ git commit -a -m”注释”	                // 提交修改

$ git push				// 把你自己分支的内容提交到远程自己的分支


切换分支：git checkout  +分支名

删除本地分支: git branch -D +分支名


1. 查看项目远程仓库的配置。对于Fork出来的项目，如项目B，只显示项目B.git，没有它的源项目A的地址信息。
git remote -v
  1. 添加源项目A的地址
git remote add upstream SourceProjectAURL
  1. 确认是否添加成功
git remote -v
  1. 获取项目A的更新
git fetch upstream
  1. 合并项目A的同步。mater可指定为项目A某一分支，如feature_A
git merge upstream/master
为何不升级到GitLab 8？国内的网络环境略差，直接升级容易失败，数据库备份也较为麻烦，所以此事就搁置了。
git push


推送代码
$ git status			// 查看状态

$ git stash				// 放入缓冲区

$ git stash list			// 

$ git checkout master		// 切换到主分支

$ git pull				// 把最新的主分支数据拉下来

$ git branch			// 查看当前的分支

$ git checkout dev			// 切换到我的分支

$ git merge master			// 合并分支

$ git stash pop			// 将缓冲区的东西提出来

$ git status			// 查看状态

$ git add *		                // 修改或添加所有

$ git commit -a -m”注释”	                // 提交修改

$ git push				// 把你自己分支的内容提交到远程自己的分支
由于你可能是第一次提交你的分支，远程 GitLab 上还没有你的分支，所以最后一句 $ git push 应该改成
$ git push --set-upstream origin 你新建的分支名字     // 按照前面说的，这里的分支名字就应该是dev
之后的操作就不需要按照上面那么写了，直接 $ git push 就行了

最后就是在 GitLab 上去将自己的分支添加到主分支中了
点击 Merge Requests ，再点击 New merge request ，选择自己的分支，
选择主分支，之后点击 Compare branches and continue 这个按钮，最后记得提交就完事了。


